%{!?luaver: %global luaver %(lua -e "print(string.sub(_VERSION, 5))" || echo 0)}
%global luapkgdir %{_datadir}/lua/%{luaver}
%global lualibdir %{_libdir}/lua/%{luaver}
# OpenResty is compatible with 5.1 only! We must build 5.1 version always, even on <= EL8
%global luacompatver 5.1
%global luacompatpkgdir %{_datadir}/lua/%{luacompatver}
%global luacompatlibdir %{_datadir}/lua/%{luacompatver}

%global luapkgname {{ luapkgname }}

%global gittag {{ spec_tag }}
%global gittag_nov {{ spec_tag_no_prefix }}

Name:           lua-%{luapkgname}
Version:        {{ version }}
Release:        3%{?dist}
Summary:        {{ summary }}
Group:          Development/Libraries
License:        BSD
URL:            https://github.com/{{ repo }}
Source0:        %{url}/archive/%{gittag}/%{name}-%{gittag}.tar.gz

%if 0%{?fedora} || 0%{?rhel} >= 7
Requires:       lua(abi) = %{luaver}
%else
Requires:       lua >= %{luaver}
%endif

%if 0%{?fedora} || 0%{?rhel} >= 8
BuildRequires:  compat-lua >= %{luaver}, compat-lua-devel >= %{luaver}
%endif

{% if requires is defined and requires is iterable %}
{% for r in requires -%}
Requires:       {{ r }}
{% endfor -%}
{%- endif -%}

{% if obsoletes is defined and obsoletes is iterable %}
{% for o in obsoletes -%}
Obsoletes:      {{ o }}
{% endfor -%}
{%- endif -%}

{% if provides is defined and provides is iterable %}
{% for p in provides -%}
Provides:       {{ p }}
{% endfor -%}
{%- endif -%}

BuildArch:      noarch

%description
%{summary}.

%if 0%{?fedora} || 0%{?rhel} > 7
%package -n lua%{luacompatver}-%{luapkgname}
Summary:         {{ summary }} for Lua %{luacompatver}

%description -n lua%{luacompatver}-%{luapkgname}
%{summary}.
%endif


%prep
%autosetup -n %{name}-%{gittag_nov}


%build
# nothing to do


%install
mkdir -p $RPM_BUILD_ROOT%{luapkgdir}
cp -pr lib/* $RPM_BUILD_ROOT%{luapkgdir}

%if 0%{?fedora} || 0%{?rhel} > 7
mkdir -p $RPM_BUILD_ROOT%{luacompatpkgdir}
cp -pr lib/* $RPM_BUILD_ROOT%{luacompatpkgdir}
%endif


%check
# nothing to do

%files
%{luapkgdir}/*
{%- if license is defined and license.path|default(False) %}
# Virtually add license macro for EL6:
%{!?_licensedir:%global license %%doc}
%license {{ license.path }}
{%- endif -%}
{%- if readme and readme.path|default(False) %}
%doc {{ readme.path }}
{%- endif %}


%if 0%{?fedora} || 0%{?rhel} > 7
%files -n lua%{luacompatver}-%{luapkgname}
%{luacompatpkgdir}/*
{%- if license is defined and license.path|default(False) %}
# Virtually add license macro for EL6:
%{!?_licensedir:%global license %%doc}
%license {{ license.path }}
{%- endif -%}
{%- if readme and readme.path|default(False) %}
%doc {{ readme.path }}
{%- endif %}
%endif



%changelog
# not maintained

